// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  uid String @id @default(cuid())
  email String @db.VarChar(255)
  username String @unique @db.VarChar(255) 
  password String @db.VarChar(255)
  role String @db.VarChar(255)
  refferalNum String @unique
  useReffReg Boolean @default(false)
  pointsBalance Int 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

enum EventType {
  paid
  free
}

enum RoleUser {
  participant
  eventOrganizer
}

model Event{
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  image String @db.VarChar(255)
  startDate DateTime @db.Date
  endDate DateTime @db.Date
  time DateTime @db.Time()
  description String
  event_type EventType @default(paid)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Location{
  id Int @id @default(autoincrement())
  city String @db.VarChar(255)
  address String @db.VarChar(255)
  region String @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role{
  id Int @id @default(autoincrement())
  role RoleUser 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model ReviewRating{
  id Int @id @default(autoincrement())
  rating Int
  review String @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

enum CategoryEvent {
  hiburan
  musik
  edukasi
}

model Category{
  id Int @id @default(autoincrement())
  name CategoryEvent 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Promotion{
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  discount Float 
  startDate DateTime @db.Date
  endDate DateTime @db.Date
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Ticket{
  id Int @id @default(autoincrement())
  ticketType String @db.VarChar(255)
  price Int 
  availableSeat Boolean @default(true)
  qty Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}
